[gd_scene load_steps=5 format=2]

[sub_resource type="CubeMesh" id=1]

[sub_resource type="Shader" id=4]
code = "shader_type spatial;
render_mode unshaded, cull_front, depth_draw_always;

uniform float thickness = 0.1;
uniform vec4 outline_color : hint_color = vec4(1.0);

void vertex() {
	vec3 normal = (COLOR.xyz - vec3(0.5)) * 2.0;
	VERTEX += (normal * thickness);
}

void fragment() {
	ALBEDO = outline_color.rgb;
	ALPHA = outline_color.a;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/thickness = 0.1
shader_param/outline_color = Color( 0, 0, 0, 1 )

[sub_resource type="ConvexPolygonShape" id=3]
points = PoolVector3Array( 1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1 )

[node name="Wall" type="StaticBody"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 10, 0, 0, 0, 5, 0, 0, 0, 0.5, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 5 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 10, 0, 0, 0, 5, 0, 0, 0, 0.5, 0, 0, 0 )
shape = SubResource( 3 )

[connection signal="gameplay_entered" from="." to="." method="_on_Wall_gameplay_entered"]
